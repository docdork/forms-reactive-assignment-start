{"ast":null,"code":"import _classCallCheck from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport var Observable = /*#__PURE__*/function () {\n  function Observable(subscribe) {\n    _classCallCheck(this, Observable);\n    this._isScalar = false;\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  _createClass(Observable, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observerOrNext, error, complete) {\n      var operator = this.operator;\n      var sink = toSubscriber(observerOrNext, error, complete);\n      if (operator) {\n        sink.add(operator.call(sink, this.source));\n      } else {\n        sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n      }\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        if (sink.syncErrorThrowable) {\n          sink.syncErrorThrowable = false;\n          if (sink.syncErrorThrown) {\n            throw sink.syncErrorValue;\n          }\n        }\n      }\n      return sink;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          sink.syncErrorThrown = true;\n          sink.syncErrorValue = err;\n        }\n        if (canReportError(sink)) {\n          sink.error(err);\n        } else {\n          console.warn(err);\n        }\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(next, promiseCtor) {\n      var _this = this;\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var subscription;\n        subscription = _this.subscribe(function (value) {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            if (subscription) {\n              subscription.unsubscribe();\n            }\n          }\n        }, reject, resolve);\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var source = this.source;\n      return source && source.subscribe(subscriber);\n    }\n  }, {\n    key: Symbol_observable,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe() {\n      for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n        operations[_key] = arguments[_key];\n      }\n      if (operations.length === 0) {\n        return this;\n      }\n      return pipeFromArray(operations)(this);\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise(promiseCtor) {\n      var _this2 = this;\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor(function (resolve, reject) {\n        var value;\n        _this2.subscribe(function (x) {\n          return value = x;\n        }, function (err) {\n          return reject(err);\n        }, function () {\n          return resolve(value);\n        });\n      });\n    }\n  }]);\n  return Observable;\n}();\nObservable.create = function (subscribe) {\n  return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n  return promiseCtor;\n}","map":{"version":3,"names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","config","Observable","subscribe","_classCallCheck","_isScalar","_subscribe","_createClass","key","value","lift","operator","source","observerOrNext","error","complete","sink","add","call","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","console","warn","forEach","next","promiseCtor","_this","getPromiseCtor","resolve","reject","subscription","unsubscribe","subscriber","pipe","_len","arguments","length","operations","Array","_key","toPromise","_this2","x","create","Promise","Error"],"sources":["/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/rxjs/_esm2015/internal/Observable.js"],"sourcesContent":["import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}