{"ast":null,"code":"import _classCallCheck from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport var ReplaySubject = /*#__PURE__*/function (_Subject) {\n  _inherits(ReplaySubject, _Subject);\n  var _super = _createSuper(ReplaySubject);\n  function ReplaySubject() {\n    var _this;\n    var bufferSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;\n    var windowTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n    var scheduler = arguments.length > 2 ? arguments[2] : undefined;\n    _classCallCheck(this, ReplaySubject);\n    _this = _super.call(this);\n    _this.scheduler = scheduler;\n    _this._events = [];\n    _this._infiniteTimeWindow = false;\n    _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    _this._windowTime = windowTime < 1 ? 1 : windowTime;\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      _this._infiniteTimeWindow = true;\n      _this.next = _this.nextInfiniteTimeWindow;\n    } else {\n      _this.next = _this.nextTimeWindow;\n    }\n    return _this;\n  }\n  _createClass(ReplaySubject, [{\n    key: \"nextInfiniteTimeWindow\",\n    value: function nextInfiniteTimeWindow(value) {\n      if (!this.isStopped) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n          _events.shift();\n        }\n      }\n      _get(_getPrototypeOf(ReplaySubject.prototype), \"next\", this).call(this, value);\n    }\n  }, {\n    key: \"nextTimeWindow\",\n    value: function nextTimeWindow(value) {\n      if (!this.isStopped) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n      }\n      _get(_getPrototypeOf(ReplaySubject.prototype), \"next\", this).call(this, value);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var _infiniteTimeWindow = this._infiniteTimeWindow;\n      var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n      var scheduler = this.scheduler;\n      var len = _events.length;\n      var subscription;\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      } else if (this.isStopped || this.hasError) {\n        subscription = Subscription.EMPTY;\n      } else {\n        this.observers.push(subscriber);\n        subscription = new SubjectSubscription(this, subscriber);\n      }\n      if (scheduler) {\n        subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n      }\n      if (_infiniteTimeWindow) {\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n          subscriber.next(_events[i]);\n        }\n      } else {\n        for (var _i = 0; _i < len && !subscriber.closed; _i++) {\n          subscriber.next(_events[_i].value);\n        }\n      }\n      if (this.hasError) {\n        subscriber.error(this.thrownError);\n      } else if (this.isStopped) {\n        subscriber.complete();\n      }\n      return subscription;\n    }\n  }, {\n    key: \"_getNow\",\n    value: function _getNow() {\n      return (this.scheduler || queue).now();\n    }\n  }, {\n    key: \"_trimBufferThenGetEvents\",\n    value: function _trimBufferThenGetEvents() {\n      var now = this._getNow();\n      var _bufferSize = this._bufferSize;\n      var _windowTime = this._windowTime;\n      var _events = this._events;\n      var eventsCount = _events.length;\n      var spliceCount = 0;\n      while (spliceCount < eventsCount) {\n        if (now - _events[spliceCount].time < _windowTime) {\n          break;\n        }\n        spliceCount++;\n      }\n      if (eventsCount > _bufferSize) {\n        spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n      }\n      if (spliceCount > 0) {\n        _events.splice(0, spliceCount);\n      }\n      return _events;\n    }\n  }]);\n  return ReplaySubject;\n}(Subject);\nvar ReplayEvent = /*#__PURE__*/_createClass(function ReplayEvent(time, value) {\n  _classCallCheck(this, ReplayEvent);\n  this.time = time;\n  this.value = value;\n});","map":{"version":3,"names":["Subject","queue","Subscription","ObserveOnSubscriber","ObjectUnsubscribedError","SubjectSubscription","ReplaySubject","_Subject","_inherits","_super","_createSuper","_this","bufferSize","arguments","length","undefined","Number","POSITIVE_INFINITY","windowTime","scheduler","_classCallCheck","call","_events","_infiniteTimeWindow","_bufferSize","_windowTime","next","nextInfiniteTimeWindow","nextTimeWindow","_createClass","key","value","isStopped","push","shift","_get","_getPrototypeOf","prototype","ReplayEvent","_getNow","_trimBufferThenGetEvents","_subscribe","subscriber","len","subscription","closed","hasError","EMPTY","observers","add","i","error","thrownError","complete","now","eventsCount","spliceCount","time","Math","max","splice"],"sources":["/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/rxjs/_esm2015/internal/ReplaySubject.js"],"sourcesContent":["import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}