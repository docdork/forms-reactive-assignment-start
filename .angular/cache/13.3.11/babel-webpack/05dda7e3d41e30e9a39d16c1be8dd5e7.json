{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n  var concurrent = Number.POSITIVE_INFINITY;\n  var scheduler = null;\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n  var last = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = observables.pop();\n  }\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return observables[0];\n  }\n  return mergeAll(concurrent)(fromArray(observables, scheduler));\n}","map":{"version":3,"names":["Observable","isScheduler","mergeAll","fromArray","merge","concurrent","Number","POSITIVE_INFINITY","scheduler","_len","arguments","length","observables","Array","_key","last","pop"],"sources":["/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/rxjs/_esm2015/internal/observable/merge.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge(...observables) {\n    let concurrent = Number.POSITIVE_INFINITY;\n    let scheduler = null;\n    let last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,SAASC,KAAKA,CAAA,EAAiB;EAClC,IAAIC,UAAU,GAAGC,MAAM,CAACC,iBAAiB;EACzC,IAAIC,SAAS,GAAG,IAAI;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFAC,WAAW,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAXF,WAAW,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAGhC,IAAIC,IAAI,GAAGH,WAAW,CAACA,WAAW,CAACD,MAAM,GAAG,CAAC,CAAC;EAC9C,IAAIV,WAAW,CAACc,IAAI,CAAC,EAAE;IACnBP,SAAS,GAAGI,WAAW,CAACI,GAAG,CAAC,CAAC;IAC7B,IAAIJ,WAAW,CAACD,MAAM,GAAG,CAAC,IAAI,OAAOC,WAAW,CAACA,WAAW,CAACD,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;MACnFN,UAAU,GAAGO,WAAW,CAACI,GAAG,CAAC,CAAC;IAClC;EACJ,CAAC,MACI,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC/BV,UAAU,GAAGO,WAAW,CAACI,GAAG,CAAC,CAAC;EAClC;EACA,IAAIR,SAAS,KAAK,IAAI,IAAII,WAAW,CAACD,MAAM,KAAK,CAAC,IAAIC,WAAW,CAAC,CAAC,CAAC,YAAYZ,UAAU,EAAE;IACxF,OAAOY,WAAW,CAAC,CAAC,CAAC;EACzB;EACA,OAAOV,QAAQ,CAACG,UAAU,CAAC,CAACF,SAAS,CAACS,WAAW,EAAEJ,SAAS,CAAC,CAAC;AAClE"},"metadata":{},"sourceType":"module"}