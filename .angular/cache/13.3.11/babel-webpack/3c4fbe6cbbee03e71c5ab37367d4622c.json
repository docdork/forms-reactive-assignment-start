{"ast":null,"code":"import _toConsumableArray from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n  return function raceOperatorFunction(source) {\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0];\n    }\n    return source.lift.call(raceStatic.apply(void 0, [source].concat(_toConsumableArray(observables))));\n  };\n}","map":{"version":3,"names":["isArray","race","raceStatic","_len","arguments","length","observables","Array","_key","raceOperatorFunction","source","lift","call","apply","concat","_toConsumableArray"],"sources":["/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/rxjs/_esm2015/internal/operators/race.js"],"sourcesContent":["import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,IAAI,IAAIC,UAAU,QAAQ,oBAAoB;AACvD,OAAO,SAASD,IAAIA,CAAA,EAAiB;EAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAbC,WAAW,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAXF,WAAW,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC/B,OAAO,SAASC,oBAAoBA,CAACC,MAAM,EAAE;IACzC,IAAIJ,WAAW,CAACD,MAAM,KAAK,CAAC,IAAIL,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MACrDA,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC;IAChC;IACA,OAAOI,MAAM,CAACC,IAAI,CAACC,IAAI,CAACV,UAAU,CAAAW,KAAA,UAACH,MAAM,EAAAI,MAAA,CAAAC,kBAAA,CAAKT,WAAW,GAAC,CAAC;EAC/D,CAAC;AACL"},"metadata":{},"sourceType":"module"}