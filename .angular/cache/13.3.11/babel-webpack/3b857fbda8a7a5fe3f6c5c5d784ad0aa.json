{"ast":null,"code":"import _assertThisInitialized from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n  var scheduler = async;\n  var windowCreationInterval = null;\n  var maxWindowSize = Number.POSITIVE_INFINITY;\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n  return function windowTimeOperatorFunction(source) {\n    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\nvar WindowTimeOperator = /*#__PURE__*/function () {\n  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    _classCallCheck(this, WindowTimeOperator);\n    this.windowTimeSpan = windowTimeSpan;\n    this.windowCreationInterval = windowCreationInterval;\n    this.maxWindowSize = maxWindowSize;\n    this.scheduler = scheduler;\n  }\n  _createClass(WindowTimeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n  }]);\n  return WindowTimeOperator;\n}();\nvar CountedSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(CountedSubject, _Subject);\n  var _super = _createSuper(CountedSubject);\n  function CountedSubject() {\n    var _this;\n    _classCallCheck(this, CountedSubject);\n    _this = _super.apply(this, arguments);\n    _this._numberOfNextedValues = 0;\n    return _this;\n  }\n  _createClass(CountedSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      this._numberOfNextedValues++;\n      _get(_getPrototypeOf(CountedSubject.prototype), \"next\", this).call(this, value);\n    }\n  }, {\n    key: \"numberOfNextedValues\",\n    get: function get() {\n      return this._numberOfNextedValues;\n    }\n  }]);\n  return CountedSubject;\n}(Subject);\nvar WindowTimeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(WindowTimeSubscriber, _Subscriber);\n  var _super2 = _createSuper(WindowTimeSubscriber);\n  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    var _this2;\n    _classCallCheck(this, WindowTimeSubscriber);\n    _this2 = _super2.call(this, destination);\n    _this2.destination = destination;\n    _this2.windowTimeSpan = windowTimeSpan;\n    _this2.windowCreationInterval = windowCreationInterval;\n    _this2.maxWindowSize = maxWindowSize;\n    _this2.scheduler = scheduler;\n    _this2.windows = [];\n    var window = _this2.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      var closeState = {\n        subscriber: _assertThisInitialized(_this2),\n        window: window,\n        context: null\n      };\n      var creationState = {\n        windowTimeSpan: windowTimeSpan,\n        windowCreationInterval: windowCreationInterval,\n        subscriber: _assertThisInitialized(_this2),\n        scheduler: scheduler\n      };\n      _this2.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      _this2.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      var timeSpanOnlyState = {\n        subscriber: _assertThisInitialized(_this2),\n        window: window,\n        windowTimeSpan: windowTimeSpan\n      };\n      _this2.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n    return _this2;\n  }\n  _createClass(WindowTimeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var windows = this.windows;\n      var len = windows.length;\n      for (var i = 0; i < len; i++) {\n        var window = windows[i];\n        if (!window.closed) {\n          window.next(value);\n          if (window.numberOfNextedValues >= this.maxWindowSize) {\n            this.closeWindow(window);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      var windows = this.windows;\n      while (windows.length > 0) {\n        windows.shift().error(err);\n      }\n      this.destination.error(err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var windows = this.windows;\n      while (windows.length > 0) {\n        var window = windows.shift();\n        if (!window.closed) {\n          window.complete();\n        }\n      }\n      this.destination.complete();\n    }\n  }, {\n    key: \"openWindow\",\n    value: function openWindow() {\n      var window = new CountedSubject();\n      this.windows.push(window);\n      var destination = this.destination;\n      destination.next(window);\n      return window;\n    }\n  }, {\n    key: \"closeWindow\",\n    value: function closeWindow(window) {\n      window.complete();\n      var windows = this.windows;\n      windows.splice(windows.indexOf(window), 1);\n    }\n  }]);\n  return WindowTimeSubscriber;\n}(Subscriber);\nfunction dispatchWindowTimeSpanOnly(state) {\n  var subscriber = state.subscriber,\n    windowTimeSpan = state.windowTimeSpan,\n    window = state.window;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n  var windowTimeSpan = state.windowTimeSpan,\n    subscriber = state.subscriber,\n    scheduler = state.scheduler,\n    windowCreationInterval = state.windowCreationInterval;\n  var window = subscriber.openWindow();\n  var action = this;\n  var context = {\n    action: action,\n    subscription: null\n  };\n  var timeSpanState = {\n    subscriber: subscriber,\n    window: window,\n    context: context\n  };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n  var subscriber = state.subscriber,\n    window = state.window,\n    context = state.context;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}","map":{"version":3,"names":["Subject","async","Subscriber","isNumeric","isScheduler","windowTime","windowTimeSpan","scheduler","windowCreationInterval","maxWindowSize","Number","POSITIVE_INFINITY","arguments","windowTimeOperatorFunction","source","lift","WindowTimeOperator","_classCallCheck","_createClass","key","value","call","subscriber","subscribe","WindowTimeSubscriber","CountedSubject","_Subject","_inherits","_super","_createSuper","_this","apply","_numberOfNextedValues","next","_get","_getPrototypeOf","prototype","get","_Subscriber","_super2","destination","_this2","windows","window","openWindow","closeState","_assertThisInitialized","context","creationState","add","schedule","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","_next","len","length","i","closed","numberOfNextedValues","closeWindow","_error","err","shift","error","_complete","complete","push","splice","indexOf","state","action","subscription","timeSpanState","remove"],"sources":["/Users/davidholliday/Desktop/forms-reactive-assignment-start/node_modules/rxjs/_esm2015/internal/operators/windowTime.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}